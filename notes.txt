Approach:

Write a convertor that operates on files. The convertor can be incorporated later
into a web service.

Create a log file to contain any errors generated during the conversion.
Should this be a simple text log, or should we have a data structure for errors?

Create an error reporter object that captures error information generated during
conversion process.

Given two files:
	- A clarity sample manifest file
	- A Freezeman sample import template
	
- Parse the manifest with pandas to build a dataFrame
- Scan the rows to locate the expected headers, to identify row data start
	- Header descriptions should be stored in a JSON file, eg. MOH_HEADERS.json
- Scan row by row
	- Validate row contents and discard invalid rows
	- Convert row to a FreezmanSampleRecord object
		- FreezemanSampleRecord object contains a field for each column of the sample import file
        - Why not just add rows to an output dataFrame?
- Write the converted rows out to an import template file
	- Parse the import template to create dataFrame
	- Add a row for each FreezemanSampleRecord object
	- Write the dataFrame out to file 
- Export error report as text file, or maybe json file for web service (or both, or HTML, etc..)


Things:
A thing that retrieves the current version of the samples import template from the Freezeman backend?
A thing that loads a file with pandas and produces a dataFrame
A thing that takes an output dataFrame and writes the data to file in excel format
A thing that can locate an expected header row in a data dataFrame
A thing that processes one row and converts it to output
A thing that collects errors detected during processing
A thing that writes errors out to an error log